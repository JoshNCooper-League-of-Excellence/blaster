import fmt::*;
// import engine::*;
#include "engine.ela";

main :: fn() {
  mut engine: Engine;
  mut scene: Scene;

  engine.init("Blaster");


  scene.add_object(.{
    position: Vector3::zero(),
    scale:    Vector3::one(),
    model: 0,
  });

  DisableCursor();

  engine.update = fn(engine: *mut Engine) {
    UpdateCamera(&const engine.scene.camera, CameraMode::CAMERA_FIRST_PERSON);
    
    for object in engine.scene.game_objects {
      object.rotated(Vector3::one() / 2);

      rot_axis := object.rotation.normalize();
      rot_angle := object.rotation.length();

      mut builder: String_Builder;
      defer builder.deinit();

      model := engine.scene.models[object.model];
      DrawModelEx(model, object.position, rot_axis, rot_angle, object.scale, WHITE);
    }
  };
  
  engine.physics = fn(engine: *mut Engine) {
  };

  scene.load = fn(scene: *mut Scene) {
    scene.models.push(LoadModel("assets/cuba.obj"c));
    scene.camera.target = .{x: 0, y: 0, z: 0};
    scene.camera.position = .{x: 0, y: 2, z: 5};
    scene.camera.up = .{x: 0, y: 1, z: 0};
    scene.camera.fovy = 60.0;
    
  };

  engine.load_scene(&mut scene);
  engine.run();
}
